{"ast":null,"code":"var _jsxFileName = \"/Users/phanhoang/Desktop/kodfrontend-15.10.20/src/auth/Register.js\";\nimport React, { useState } from 'react';\nimport { Card, Container, Form, Button, Alert } from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nconst validationSchema = yup.object().shape({\n  username: yup.string().min(6, 'Username is less than 6 characters').required('Username is required'),\n  password: yup.string().min(6, 'Password is less than 6 characters').required('Password is required'),\n  confirmPassword: yup.string().min(6, 'Confirm Password is less than 6 characters').required('Confirm Password is required').oneOf([yup.ref('password')], 'Confirm Password not match')\n});\nexport const Register = () => {\n  const [registering, setRegistering] = useState(false);\n  const [isSuccess, setSuccess] = useState(false);\n  const [isError, setError] = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n      confirmPassword: ''\n    },\n    onSubmit: value => {\n      axios.post('http://localhost:4000/auth/register', {\n        username: value.username,\n        password: value.password\n      }).then(res => {\n        setSuccess(true);\n        setError(false);\n      }).catch(() => {\n        setError(true);\n        setSuccess(false);\n      }).finally(() => {\n        setRegistering(false);\n      });\n    },\n    validationSchema: validationSchema\n  });\n  const {\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    touched,\n    errors\n  } = formik;\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    border: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, isSuccess ? /*#__PURE__*/React.createElement(Alert, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 34\n    }\n  }, \"Register successfully\") : null, registering && isError ? /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 47\n    }\n  }, \"Register failed\") : null, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Please fill out the form\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, \"User Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter User Name\",\n    name: \"username\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isInvalid: touched.username && errors.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, errors.username)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isInvalid: touched.password && errors.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, errors.password)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formConfirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"confirmPassword\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isInvalid: touched.confirmPassword && errors.confirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, errors.confirmPassword)), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    disabled: registering,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, registering ? \"Registering......\" : \"Register\")))));\n};","map":{"version":3,"sources":["/Users/phanhoang/Desktop/kodfrontend-15.10.20/src/auth/Register.js"],"names":["React","useState","Card","Container","Form","Button","Alert","useFormik","yup","axios","validationSchema","object","shape","username","string","min","required","password","confirmPassword","oneOf","ref","Register","registering","setRegistering","isSuccess","setSuccess","isError","setError","formik","initialValues","onSubmit","value","post","then","res","catch","finally","handleSubmit","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Card, Container, Form, Button, Alert } from 'react-bootstrap'\r\nimport { useFormik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport axios from 'axios'\r\n\r\nconst validationSchema = yup.object().shape({\r\n    username: yup.string().min(6, 'Username is less than 6 characters').required('Username is required'),\r\n    password: yup.string().min(6, 'Password is less than 6 characters').required('Password is required'),\r\n    confirmPassword: yup.string().min(6, 'Confirm Password is less than 6 characters').required('Confirm Password is required').oneOf([yup.ref('password')], 'Confirm Password not match')\r\n})\r\n\r\nexport const Register = () => {\r\n    const [registering, setRegistering]= useState(false)\r\n    const [isSuccess, setSuccess] = useState(false)\r\n    const [isError, setError] = useState(false)\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            username: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n        },\r\n        onSubmit: (value) => {\r\n            axios.post('http://localhost:4000/auth/register', {\r\n                username: value.username,\r\n                password: value.password\r\n            }).then(res =>{\r\n                setSuccess(true)\r\n                setError(false)\r\n            }).catch(()=>{\r\n                setError(true)\r\n                setSuccess(false)\r\n            }).finally(()=>{\r\n                setRegistering(false)\r\n            })\r\n        },\r\n        validationSchema: validationSchema,\r\n    })\r\n    const { handleSubmit, handleChange, handleBlur, touched, errors } = formik\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <Card border=\"info\">\r\n                <Card.Header>Register</Card.Header>\r\n                <Card.Body>\r\n                    {isSuccess ? <Alert variant=\"success\">Register successfully</Alert> : null}\r\n                    {registering && isError ? <Alert variant=\"danger\">Register failed</Alert>: null}\r\n                    <Card.Title>Please fill out the form</Card.Title>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>User Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter User Name\" name=\"username\" \r\n                            onChange={handleChange}\r\n                             onBlur={handleBlur} \r\n                             isInvalid={touched.username && errors.username}/>\r\n                            <Form.Control.Feedback type=\"invalid\">{errors.username}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" \r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur} \r\n                            isInvalid={touched.password && errors.password}/>\r\n                            <Form.Control.Feedback type=\"invalid\">{errors.password}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formConfirmPassword\">\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Confirm Password\" name=\"confirmPassword\" \r\n                            onChange={handleChange} \r\n                            onBlur={handleBlur}\r\n                            isInvalid={ touched.confirmPassword && errors.confirmPassword}/>\r\n                            <Form.Control.Feedback type=\"invalid\">{errors.confirmPassword}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" disabled={registering}>\r\n                           {registering ? \"Registering......\": \"Register\"}\r\n  </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}