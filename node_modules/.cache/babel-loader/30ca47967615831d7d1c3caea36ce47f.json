{"ast":null,"code":"var _jsxFileName = \"/Users/phanhoang/Desktop/kodfrontend-15.10.20/src/screens/game/Game.js\";\nimport React, { useContext, useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { MainNav } from '../../components/parts/MainNav';\nimport { Board } from '../../components/parts/Board';\nimport { ScoreCard } from '../../components/parts/ScoreCard';\nimport styles from './Game.module.css';\nimport { AuthUserCtx } from '../../context/auth';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nexport const Game = () => {\n  // const  authUserCtx  = useContext(AuthUserCtx)\n  const [score, setScore] = useState(0);\n\n  const updateScore = newScore => {\n    setScore(score + newScore);\n    console.log(score, \"newscore \", newScore);\n  }; // if(!authUser){\n  //     return <Redirect to=\"/auth/login\" />\n  // }\n\n\n  axios.post('http://localhost:4000/game', {\n    playerId: \"\",\n    score: 10,\n    timeSave: \"10/10/2020\"\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MainNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"d-flex justify-content-center align-items-center\",\n    style: {\n      marginTop: \"2em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ScoreCard, {\n    score: score,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Board, {\n    updateScore: updateScore,\n    className: styles.board,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })));\n}; // let colors = [0,1,2,3,4];\n// let fillCell = (rowIndex,colIndex,board,row)=> {\n//     let color1 = -1, color2 = -2;\n//     if (rowIndex >= 2) { // check two cells above\n//         if (board[rowIndex-1][colIndex]===board[rowIndex-2][colIndex])\n//             color1 = board[rowIndex-1][colIndex];\n//     }\n//     console.log(board[rowIndex])\n//     if (colIndex >= 2) { // check two cells on the left\n//         if (row[colIndex-1]===row[colIndex-2])\n//             color2 = row[colIndex-1];\n//     }\n//     let filtered = colors.filter(item=>(item!==color1&&item!==color2) )\n//     return filtered[Math.floor(Math.random()*filtered.length)]\n// }\n// let board = []\n// for (let i = 0; i < 10; i++) {\n//     let row = [];\n//     for (let j = 0; j < 10; j++) {\n//         row.push(fillCell(i,j,board,row));        \n//     }\n//     board.push(row)\n// }\n// // console.log(board)","map":{"version":3,"sources":["/Users/phanhoang/Desktop/kodfrontend-15.10.20/src/screens/game/Game.js"],"names":["React","useContext","useState","Container","MainNav","Board","ScoreCard","styles","AuthUserCtx","Redirect","axios","Game","score","setScore","updateScore","newScore","console","log","post","playerId","timeSave","marginTop","board"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,KAAT,QAAsB,8BAAtB;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AACtB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMY,WAAW,GAAIC,QAAD,IAAc;AAC9BF,IAAAA,QAAQ,CAACD,KAAK,GAAGG,QAAT,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAmB,WAAnB,EAAgCG,QAAhC;AACH,GAHD,CAHsB,CAOtB;AACA;AACA;;;AACAL,EAAAA,KAAK,CAACQ,IAAN,CAAW,4BAAX,EAAyC;AAACC,IAAAA,QAAQ,EAAC,EAAV;AAAcP,IAAAA,KAAK,EAAE,EAArB;AAAyBQ,IAAAA,QAAQ,EAAE;AAAnC,GAAzC;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,kDAArB;AAAwE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAET,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAEE,WAApB;AAAiC,IAAA,SAAS,EAAEP,MAAM,CAACe,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,CADJ;AAUH,CArBM,C,CA0BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useContext, useState } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport { MainNav } from '../../components/parts/MainNav'\r\nimport { Board } from '../../components/parts/Board'\r\nimport { ScoreCard } from '../../components/parts/ScoreCard'\r\nimport styles from './Game.module.css'\r\nimport {AuthUserCtx} from '../../context/auth'\r\nimport {Redirect} from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nexport const Game = () => {\r\n    // const  authUserCtx  = useContext(AuthUserCtx)\r\n    const [score, setScore] = useState(0);\r\n    const updateScore = (newScore) => {\r\n        setScore(score + newScore)\r\n        console.log(score, \"newscore \", newScore)\r\n    }\r\n    // if(!authUser){\r\n    //     return <Redirect to=\"/auth/login\" />\r\n    // }\r\n    axios.post('http://localhost:4000/game', {playerId:\"\", score: 10, timeSave: \"10/10/2020\"})\r\n    return (\r\n        <div>\r\n            <MainNav/>\r\n            <Container className=\"d-flex justify-content-center align-items-center\" style={{ marginTop: \"2em\" }}>\r\n                <ScoreCard score={score} />\r\n                <Board updateScore={updateScore} className={styles.board} />\r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n// let colors = [0,1,2,3,4];\r\n// let fillCell = (rowIndex,colIndex,board,row)=> {\r\n//     let color1 = -1, color2 = -2;\r\n//     if (rowIndex >= 2) { // check two cells above\r\n//         if (board[rowIndex-1][colIndex]===board[rowIndex-2][colIndex])\r\n//             color1 = board[rowIndex-1][colIndex];\r\n//     }\r\n//     console.log(board[rowIndex])\r\n//     if (colIndex >= 2) { // check two cells on the left\r\n//         if (row[colIndex-1]===row[colIndex-2])\r\n//             color2 = row[colIndex-1];\r\n//     }\r\n//     let filtered = colors.filter(item=>(item!==color1&&item!==color2) )\r\n//     return filtered[Math.floor(Math.random()*filtered.length)]\r\n// }\r\n// let board = []\r\n// for (let i = 0; i < 10; i++) {\r\n//     let row = [];\r\n//     for (let j = 0; j < 10; j++) {\r\n//         row.push(fillCell(i,j,board,row));        \r\n//     }\r\n//     board.push(row)\r\n// }\r\n// // console.log(board)\r\n"]},"metadata":{},"sourceType":"module"}