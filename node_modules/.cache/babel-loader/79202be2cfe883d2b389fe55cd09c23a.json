{"ast":null,"code":"var _jsxFileName = \"/Users/phanhoang/Desktop/kodfrontend-15.10.20/src/components/parts/Timer.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Alert, Button } from 'react-bootstrap';\nimport styles from './Score.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\nexport const Timer = props => {\n  const {\n    min = 0,\n    sec = 0\n  } = props;\n  const [minutes, setMinutes] = useState(min);\n  const [seconds, setSeconds] = useState(sec); // const [preCount, setPreCount] = useState(3)\n  // useEffect(() => {\n  //     let myPreCountInterval = setInterval(() => {\n  //         if (preCount > 0) {\n  //             setPreCount(preCount - 1)\n  //         }\n  //         if (preCount === 0) {\n  //             clearInterval(myPreCountInterval)\n  //         }\n  //     }, 1000)\n  //     return () => {\n  //         clearInterval(myPreCountInterval)\n  //     }\n  // })\n\n  useEffect(() => {\n    let myInterval = setInterval(() => {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n      }\n\n      if (seconds === 0) {\n        if (minutes === 0) {\n          clearInterval(myInterval);\n        } else {\n          setMinutes(minutes - 1);\n          setSeconds(59);\n        }\n      }\n    }, 1000);\n    return () => {\n      clearInterval(myInterval);\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, minutes === 0 && seconds === 0 ? /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(Alert.Heading, {\n    dismissible: true,\n    className: styles.timer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Oooopsie...\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    style: {\n      textAlign: \"center\"\n    },\n    className: styles.timer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"Time's up!\")) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-flex align-items-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faClock,\n    className: \"mr-2\",\n    style: {\n      fontSize: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \" \", minutes, \":\", seconds < 10 ? `0${seconds}` : seconds)));\n};","map":{"version":3,"sources":["/Users/phanhoang/Desktop/kodfrontend-15.10.20/src/components/parts/Timer.js"],"names":["React","useState","useEffect","Alert","Button","styles","FontAwesomeIcon","faClock","Timer","props","min","sec","minutes","setMinutes","seconds","setSeconds","myInterval","setInterval","clearInterval","timer","textAlign","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AAEA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAEC,IAAAA,GAAG,GAAG,CAAR;AAAWC,IAAAA,GAAG,GAAG;AAAjB,MAAuBF,KAA7B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAACS,GAAD,CAAtC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAACU,GAAD,CAAtC,CAH4B,CAI5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,UAAU,GAAGC,WAAW,CAAC,MAAM;AAC/B,UAAIH,OAAO,GAAG,CAAd,EAAiB;AACbC,QAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH;;AACD,UAAIA,OAAO,KAAK,CAAhB,EAAmB;AACf,YAAIF,OAAO,KAAK,CAAhB,EAAmB;AACfM,UAAAA,aAAa,CAACF,UAAD,CAAb;AACH,SAFD,MAEO;AACHH,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAG,UAAAA,UAAU,CAAC,EAAD,CAAV;AACH;AACJ;AACJ,KAZ2B,EAYzB,IAZyB,CAA5B;AAaA,WAAO,MAAM;AACTG,MAAAA,aAAa,CAACF,UAAD,CAAb;AACH,KAFD;AAGH,GAjBQ,CAAT;AAmBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKSJ,OAAO,KAAK,CAAZ,IAAiBE,OAAO,KAAK,CAA9B,gBACO,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD,CAAO,OAAP;AAAe,IAAA,WAAW,MAA1B;AAA2B,IAAA,SAAS,EAAET,MAAM,CAACc,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAGC;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAX;AAAoC,IAAA,SAAS,EAAEf,MAAM,CAACc,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHD,CADP,gBAMM;AAAM,IAAA,SAAS,EAAC,kDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEZ,OAAvB;AAAgC,IAAA,SAAS,EAAC,MAA1C;AAAiD,IAAA,KAAK,EAAE;AAAEc,MAAAA,QAAQ,EAAE;AAAZ,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMT,OAAN,OAAgBE,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAA+BA,OAA/C,CAFF,CAXd,CADJ;AAmBH,CAzDM","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport { Alert, Button } from 'react-bootstrap'\r\nimport styles from './Score.module.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faClock } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const Timer = (props) => {\r\n    const { min = 0, sec = 0 } = props;\r\n    const [minutes, setMinutes] = useState(min);\r\n    const [seconds, setSeconds] = useState(sec);\r\n    // const [preCount, setPreCount] = useState(3)\r\n    // useEffect(() => {\r\n    //     let myPreCountInterval = setInterval(() => {\r\n    //         if (preCount > 0) {\r\n    //             setPreCount(preCount - 1)\r\n    //         }\r\n    //         if (preCount === 0) {\r\n    //             clearInterval(myPreCountInterval)\r\n    //         }\r\n    //     }, 1000)\r\n    //     return () => {\r\n    //         clearInterval(myPreCountInterval)\r\n    //     }\r\n    // })\r\n\r\n    useEffect(() => {\r\n        let myInterval = setInterval(() => {\r\n            if (seconds > 0) {\r\n                setSeconds(seconds - 1);\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    clearInterval(myInterval)\r\n                } else {\r\n                    setMinutes(minutes - 1);\r\n                    setSeconds(59);\r\n                }\r\n            }\r\n        }, 1000)\r\n        return () => {\r\n            clearInterval(myInterval);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            {/* {\r\n                <h1 style={{ textAlign: \"center\" }}>{preCount > 0 ? preCount + `...` : null}</h1>\r\n            } */}\r\n            {\r\n                (minutes === 0 && seconds === 0)\r\n                    ? (<Alert variant=\"danger\" className=\"mt-2\" >\r\n                        <Alert.Heading dismissible className={styles.timer}>Oooopsie...</Alert.Heading>\r\n                        <hr />\r\n                        <h6 style={{ textAlign: \"center\" }} className={styles.timer}>Time's up!</h6>\r\n                    </Alert>)\r\n                    : <span className=\"d-flex align-items-center justify-content-center\">\r\n                        <FontAwesomeIcon icon={faClock} className=\"mr-2\" style={{ fontSize: \"30px\" }} />\r\n                        <h1> {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</h1>\r\n                    </span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}